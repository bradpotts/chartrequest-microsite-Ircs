---
/**
 * InfoBox Component - A clean, modern stat/info box without heavy shadows
 */
import Heading from './Heading.astro';
import Text from './Text.astro';

interface Props {
  icon?: string;
  title: string;
  titleLevel?: '1' | '2' | '3' | '4' | '5' | '6' | 1 | 2 | 3 | 4 | 5 | 6;
  titleSize?: 'xl' | 'lg' | 'md' | 'sm';
  value?: string;
  description?: string;
  color?: 'primary' | 'blue' | 'green' | 'amber' | 'purple' | 'gray';
  bgColor?: 'white' | 'light' | 'blue' | 'green' | 'amber' | 'purple' | 'gray';
  class?: string;
}

const { 
  icon,
  title, 
  titleLevel = '3',
  titleSize = 'sm',
  value,
  description,
  color = 'primary',
  bgColor = 'white',
  class: className = ''
} = Astro.props;

// Color variants for icons
const iconColors: Record<string, string> = {
  primary: 'text-primary',
  blue: 'text-blue-600',
  green: 'text-green-600',
  amber: 'text-amber-500',
  purple: 'text-purple-600',
  gray: 'text-gray-800',
};

// Background color variants
const bgColors: Record<string, string> = {
  white: 'bg-white',
  light: 'bg-gray-50',
  blue: 'bg-blue-50',
  green: 'bg-green-50',
  amber: 'bg-amber-50',
  purple: 'bg-purple-50',
  gray: 'bg-gray-50',
};

// Border color variants
const borderColors: Record<string, string> = {
  white: 'border-gray-200',
  light: 'border-gray-200',
  blue: 'border-blue-200/70',
  green: 'border-green-200/70',
  amber: 'border-amber-200/70',
  purple: 'border-purple-200/70',
  gray: 'border-gray-200',
};

// Hover state
const hoverEffects: Record<string, string> = {
  white: 'hover:border-gray-300 hover:bg-gray-50/50',
  light: 'hover:border-gray-300 hover:bg-gray-100/50',
  blue: 'hover:border-blue-300/50 hover:bg-blue-50/70',
  green: 'hover:border-green-300/50 hover:bg-green-50/70',
  amber: 'hover:border-amber-300/50 hover:bg-amber-50/70',
  purple: 'hover:border-purple-300/50 hover:bg-purple-50/70',
  gray: 'hover:border-gray-300 hover:bg-gray-100/50',
};

const cardStyle = `${bgColors[bgColor]} ${borderColors[bgColor]} ${hoverEffects[bgColor]} border rounded-xl p-6 flex flex-col items-center text-center transition-all duration-300 ${className}`;
---

<div class={cardStyle}>
  {icon && (
    <div class={`${iconColors[color]} mb-3 opacity-90`}>
      <Fragment set:html={icon} />
    </div>
  )}
  <div class="flex flex-col items-center justify-center">
    {value && <Heading level={titleLevel} size={titleSize} align="center" class="mb-1">
      {value}
    </Heading>}
    <Text variant="body" color="default" align="center" class="text-sm uppercase tracking-wide font-medium">
      {title}
    </Text>
  </div>
  {description && (
    <Text variant="body" color="default" align="center" class="mb-4">
      {description}
    </Text>
  )}
  <slot />
</div>
